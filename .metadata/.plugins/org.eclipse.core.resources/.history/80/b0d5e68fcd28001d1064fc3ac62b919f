<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- 配置自动扫描的包：将Service扫描到IOC容器中 -->
	<context:component-scan base-package="com.atguigu.crowd.service"></context:component-scan>
	<!-- 配置事务管理器 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 装配数据源 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 配置事务-->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<!-- 配置事务的属性-->
		<tx:attributes>
			<!-- 查询方法，配置只读属性，优化数据库 -->
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="count*" read-only="true" />
			<!-- 增删改方法，配置事务的传播行为、回滚行为 -->
			<!-- 
				propagation属性：REQUIRED，默认值，表示当前方法必须工作在事务中，如果线程上没有已经开启的事务，则自己开启，如果有则使用已有的。
										顾虑：会受到别的事务影响，有可能被回滚。
							   REQUIRED_NEW，只管在自己的事务中运行。
				rollback-for属性：配置事务方法针对什么养的异常回滚。
							   默认，
							   建议，
			-->
			<tx:method name="save*" propagation="REQUIRED_NEW" rollback-for=""/>
			<tx:method name="find*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="count*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<!-- 配置事务切面 -->
	<aop:config>
		<!-- 考虑到整合springsecurity，避免把UserDetailService加入事务控制，这里扫描类换为ServiceImpl结尾-->
		<aop:pointcut id="txPointcut" expression="excution(* *..*ServiceImpl.*(..)" />
		<!-- 将切入点表达式和事务通知关联-->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
	</aop:config>
</beans>